name: plan

on:
  pull_request:
    branches: [main]
    types: ['opened', 'reopened', 'synchronize', 'ready_for_review']

concurrency:
  group: ims-api-gateway-feature-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  tf-plan:
    if: github.event.pull_request.draft == false
    defaults:
      run:
        working-directory: '.'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::731219982456:role/ims-terraform-infrastructure-role-sandbox
          aws-region: eu-west-1

      - name: Terraform security
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          tfsec_args: --soft-fail --minimum-severity high
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.9.8'

      - name: Terraform format check
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform init
        id: init
        run: terraform init -backend-config=env/sandbox/sandbox.tfbackend -input=false

      - name: Terraform draw cycles
        id: draw-cycles
        run: terraform graph -draw-cycles

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -var-file=env/sandbox/sandbox.tfvars -out=sandbox.tfplan -input=false -no-color
        continue-on-error: false

      - name: Show the plan in GH comments
        uses: actions/github-script@v7
        env:
          STDOUT: '```${{ steps.plan.outputs.stdout }}```'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })

      - name: Terraform apply
        run: terraform apply -auto-approve -input=false -no-color sandbox.tfplan


#on:
#  pull_request:
#    branches: [main]
#    types: ['opened', 'reopened', 'synchronize', 'ready_for_review']
